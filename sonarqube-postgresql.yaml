---
kind: Project
apiVersion: project.openshift.io/v1
metadata:
  name: sonarqube
  labels:
    kubernetes.io/metadata.name: sonarqube
---
kind: Secret
apiVersion: v1
metadata:
  name: postgresql-sonarqube
  namespace: sonarqube
data:
  database-name: c29uYXI=
  database-password: c29uYXI=
  database-user: c29uYXI=
  sonar-jdbc-url: amRiYzpwb3N0Z3Jlc3FsOi8vcG9zdGdyZXNxbC1zb25hcnF1YmU6NTQzMi9zb25hcg==
type: Opaque
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgresql-sonarqube-data
spec:
  storageClassName: thin
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql-sonarqube
  namespace: sonarqube
  labels:
    app: sonarqube
spec:
  selector:
    matchLabels:
      app: sonarqube
  replicas: 1
  template:
    metadata:
      labels:
        app: sonarqube
    spec:
      containers:
        - name: postgresql
          image: docker.io/postgres:15
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 5432
            protocol: TCP
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgresql-sonarqube
                  key: database-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql-sonarqube
                  key: database-password
            - name: POSTGRES_DATABASE
              valueFrom:
                secretKeyRef:
                  name: postgresql-sonarqube
                  key: database-name
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgresql-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: postgresql-data
        persistentVolumeClaim:
          claimName: postgresql-sonarqube-data
  strategy:
    recreateParams:
      timeoutSeconds: 600
    resources: {}
    type: Recreate
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarqube
  namespace: sonarqube
  labels:
    app: sonarqube
spec:
  selector:
    matchLabels:
      app: sonarqube
  replicas: 1
  template:
    metadata:
      labels:
        app: sonarqube
    spec:
      containers:
        - name: sonarqube
          image: >-
            docker.io/sonarqube:9.9-community
          ports:
            - containerPort: 9000
          env:
          - name: SONAR_JDBC_USERNAME
            valueFrom:
              secretKeyRef:
                name: postgresql-sonarqube
                key: database-user
          - name: SONAR_JDBC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgresql-sonarqube
                key: database-password
          - name: SONAR_JDBC_URL
            valueFrom:
              secretKeyRef:
                name: postgresql-sonarqube
                key: sonar-jdbc-url
---
apiVersion: v1
kind: Service
metadata:
  name: sonarqube
  labels:
    app: sonarqube
spec:
  ports:
  - name: sonarqube
    port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    app: sonarqube
  sessionAffinity: None
  type: ClusterIP
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: sonarqube
  namespace: sonarqube
  labels:
    app: sonarqube
spec:
  to:
    kind: Service
    name: sonarqube
    weight: 100
  port:
    targetPort: sonarqube
